{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DenisIevlev\\\\Desktop\\\\game-of-thrones\\\\react-gotapp\\\\src\\\\components\\\\randomChar\\\\randomChar.js\";\nimport React, { useEffect } from 'react';\nimport './randomChar.css';\nimport gotService from '../../services/gotService';\nimport Spinner from '../spinner';\nimport ErrorMessage from '../errorMessage';\n\nfunction RandomChar(_ref) {\n  var _this = this;\n\n  var updateChar = _ref.updateChar,\n      onCharLoaded = _ref.onCharLoaded,\n      onError = _ref.onError;\n  gotService = new gotService();\n  state = {\n    character: {},\n    loading: true,\n    error: false\n  };\n  useEffect(function () {\n    updateChar();\n    var timerId = setInterval(updateChar, 1500);\n    clearInterval(timerId);\n  });\n\n  onCharLoaded = function onCharLoaded(character) {\n    _this.setState({\n      character: character,\n      loading: false\n    });\n  };\n\n  onError = function onError(err) {\n    _this.setState({\n      error: true,\n      loading: false\n    });\n  };\n\n  updateChar = function updateChar() {\n    var id = Math.floor(Math.random() * 140 + 1);\n    gotService.getCharacter(id).then(onCharLoaded).catch(onError);\n  };\n\n  var errorMessage = error ? React.createElement(ErrorMessage, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }) : null;\n  var spinner = loading ? React.createElement(Spinner, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }) : null;\n  var content = !(loading || error) ? React.createElement(View, {\n    character: character,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }) : null;\n  return React.createElement(\"div\", {\n    className: \"random-block rounded\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, errorMessage, spinner, content);\n}\n\nvar View = function View(_ref2) {\n  var character = _ref2.character;\n  var name = character.name,\n      gender = character.gender,\n      born = character.born,\n      died = character.died,\n      culture = character.culture;\n  return React.createElement(React.Fragment, null, React.createElement(\"h4\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, \"Random Character: \", name), React.createElement(\"ul\", {\n    className: \"list-group list-group-flush\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, React.createElement(\"li\", {\n    className: \"list-group-item d-flex justify-content-between\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"term\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, \"Gender \"), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, gender)), React.createElement(\"li\", {\n    className: \"list-group-item d-flex justify-content-between\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"term\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, \"Born \"), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, born)), React.createElement(\"li\", {\n    className: \"list-group-item d-flex justify-content-between\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"term\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, \"Died \"), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, died)), React.createElement(\"li\", {\n    className: \"list-group-item d-flex justify-content-between\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"term\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, \"Culture \"), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, culture))));\n};\n\nexport default RandomChar;","map":{"version":3,"sources":["C:\\Users\\DenisIevlev\\Desktop\\game-of-thrones\\react-gotapp\\src\\components\\randomChar\\randomChar.js"],"names":["React","useEffect","gotService","Spinner","ErrorMessage","RandomChar","updateChar","onCharLoaded","onError","state","character","loading","error","timerId","setInterval","clearInterval","setState","err","id","Math","floor","random","getCharacter","then","catch","errorMessage","spinner","content","View","name","gender","born","died","culture"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\r\nimport './randomChar.css';\r\nimport gotService from '../../services/gotService';\r\nimport Spinner from '../spinner';\r\nimport ErrorMessage from '../errorMessage';\r\n\r\nfunction RandomChar({updateChar, onCharLoaded, onError }) {\r\n\r\n    gotService = new gotService();\r\n\r\n    state = {\r\n        character: {},\r\n        loading: true,\r\n        error: false\r\n    }\r\n    useEffect(() => {\r\n        updateChar();\r\n        const timerId = setInterval(updateChar, 1500);\r\n        clearInterval(timerId);\r\n    })\r\n\r\n    onCharLoaded = (character) => {\r\n        this.setState({\r\n            character,\r\n            loading: false\r\n        })\r\n    }\r\n    onError = (err) => {\r\n    this.setState({\r\n        error: true,\r\n        loading: false\r\n    })\r\n    }\r\n    updateChar = () => {\r\n        const id = Math.floor(Math.random() * 140 + 1);\r\n        gotService.getCharacter(id)\r\n            .then(onCharLoaded)\r\n            .catch(onError);\r\n    }\r\n        \r\n        const errorMessage = error ? <ErrorMessage></ErrorMessage> : null;\r\n\r\n        const spinner = loading ? <Spinner></Spinner> : null;\r\n        const content = !(loading || error) ?  <View character={character}></View> : null;\r\n        \r\n\r\n        return (\r\n            <div className=\"random-block rounded\">\r\n            {errorMessage}\r\n            {spinner}\r\n            {content}\r\n            </div>\r\n        );\r\n    }\r\n\r\nconst View = ({ character }) => {\r\n    const {name, gender, born, died, culture} = character;\r\n    return (\r\n        <>\r\n            <h4>Random Character: {name}</h4>\r\n            <ul className=\"list-group list-group-flush\">\r\n                <li className=\"list-group-item d-flex justify-content-between\">\r\n                    <span className=\"term\">Gender </span>\r\n                    <span>{gender}</span>\r\n                </li>\r\n                <li className=\"list-group-item d-flex justify-content-between\">\r\n                    <span className=\"term\">Born </span>\r\n                    <span>{born}</span>\r\n                </li>\r\n                <li className=\"list-group-item d-flex justify-content-between\">\r\n                    <span className=\"term\">Died </span>\r\n                    <span>{died}</span>\r\n                </li>\r\n                <li className=\"list-group-item d-flex justify-content-between\">\r\n                    <span className=\"term\">Culture </span>\r\n                    <span>{culture}</span>\r\n                </li>\r\n            </ul>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default RandomChar;"]},"metadata":{},"sourceType":"module"}