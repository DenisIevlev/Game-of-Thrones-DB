{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\DenisIevlev\\\\Desktop\\\\game-of-thrones\\\\react-gotapp\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nimport _readOnlyError from \"C:\\\\Users\\\\DenisIevlev\\\\Desktop\\\\game-of-thrones\\\\react-gotapp\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/readOnlyError\";\nvar _jsxFileName = \"C:\\\\Users\\\\DenisIevlev\\\\Desktop\\\\game-of-thrones\\\\react-gotapp\\\\src\\\\components\\\\randomChar\\\\randomChar.js\";\nimport React, { useState, useEffect } from 'react';\nimport './randomChar.css';\nimport gotService from '../../services/gotService';\nimport Spinner from '../spinner';\nimport ErrorMessage from '../errorMessage';\n\nfunction RandomChar() {\n  gotService = new gotService();\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      character = _useState2[0],\n      updateChar = _useState2[1];\n\n  var _useState3 = useState(true),\n      _useState4 = _slicedToArray(_useState3, 2),\n      loading = _useState4[0],\n      onCharLoaded = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      error = _useState6[0],\n      onError = _useState6[1];\n\n  useEffect(function () {\n    updateChar();\n    var timerId = setInterval(updateChar, 1500);\n    return function () {\n      clearInterval(timerId);\n    };\n  });\n  updateChar = (_readOnlyError(\"updateChar\"), function () {\n    var id = Math.floor(Math.random() * 140 + 1);\n    gotService.getCharacter(id).then(onCharLoaded).catch(onError);\n  });\n  var errorMessage = error ? React.createElement(ErrorMessage, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }) : null;\n  var spinner = loading ? React.createElement(Spinner, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }) : null;\n  var content = !(loading || error) ? React.createElement(View, {\n    character: character,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }) : null;\n  return React.createElement(\"div\", {\n    className: \"random-block rounded\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, errorMessage, spinner, content);\n}\n\nvar View = function View(_ref) {\n  var character = _ref.character;\n  var name = character.name,\n      gender = character.gender,\n      born = character.born,\n      died = character.died,\n      culture = character.culture;\n  return React.createElement(React.Fragment, null, React.createElement(\"h4\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, \"Random Character: \", name), React.createElement(\"ul\", {\n    className: \"list-group list-group-flush\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, React.createElement(\"li\", {\n    className: \"list-group-item d-flex justify-content-between\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"term\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, \"Gender \"), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, gender)), React.createElement(\"li\", {\n    className: \"list-group-item d-flex justify-content-between\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"term\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, \"Born \"), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, born)), React.createElement(\"li\", {\n    className: \"list-group-item d-flex justify-content-between\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"term\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, \"Died \"), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, died)), React.createElement(\"li\", {\n    className: \"list-group-item d-flex justify-content-between\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"term\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, \"Culture \"), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, culture))));\n};\n\nexport default RandomChar;","map":{"version":3,"sources":["C:\\Users\\DenisIevlev\\Desktop\\game-of-thrones\\react-gotapp\\src\\components\\randomChar\\randomChar.js"],"names":["React","useState","useEffect","gotService","Spinner","ErrorMessage","RandomChar","character","updateChar","loading","onCharLoaded","error","onError","timerId","setInterval","clearInterval","id","Math","floor","random","getCharacter","then","catch","errorMessage","spinner","content","View","name","gender","born","died","culture"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './randomChar.css';\r\nimport gotService from '../../services/gotService';\r\nimport Spinner from '../spinner';\r\nimport ErrorMessage from '../errorMessage';\r\n\r\nfunction RandomChar() {\r\n\r\n    gotService = new gotService();\r\n\r\n    const [character, updateChar] = useState([]);\r\n    const [loading, onCharLoaded] = useState(true);\r\n    const [error, onError] = useState(false);\r\n\r\n    useEffect(() => {\r\n        updateChar();\r\n        let timerId = setInterval(updateChar, 1500);\r\n        return () => {\r\n            clearInterval(timerId);\r\n        }\r\n    })\r\n\r\n        updateChar = () => {\r\n        const id = Math.floor(Math.random() * 140 + 1);\r\n        gotService.getCharacter(id)\r\n            .then(onCharLoaded)\r\n            .catch(onError);\r\n    }\r\n        \r\n        const errorMessage = error ? <ErrorMessage></ErrorMessage> : null;\r\n\r\n        const spinner = loading ? <Spinner></Spinner> : null;\r\n        const content = !(loading || error) ?  <View character={character}></View> : null;\r\n        \r\n\r\n        return (\r\n            <div className=\"random-block rounded\">\r\n            {errorMessage}\r\n            {spinner}\r\n            {content}\r\n            </div>\r\n        );\r\n    }\r\n\r\nconst View = ({ character }) => {\r\n    const {name, gender, born, died, culture} = character;\r\n    return (\r\n        <>\r\n            <h4>Random Character: {name}</h4>\r\n            <ul className=\"list-group list-group-flush\">\r\n                <li className=\"list-group-item d-flex justify-content-between\">\r\n                    <span className=\"term\">Gender </span>\r\n                    <span>{gender}</span>\r\n                </li>\r\n                <li className=\"list-group-item d-flex justify-content-between\">\r\n                    <span className=\"term\">Born </span>\r\n                    <span>{born}</span>\r\n                </li>\r\n                <li className=\"list-group-item d-flex justify-content-between\">\r\n                    <span className=\"term\">Died </span>\r\n                    <span>{died}</span>\r\n                </li>\r\n                <li className=\"list-group-item d-flex justify-content-between\">\r\n                    <span className=\"term\">Culture </span>\r\n                    <span>{culture}</span>\r\n                </li>\r\n            </ul>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default RandomChar;"]},"metadata":{},"sourceType":"module"}