{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\DenisIevlev\\\\Desktop\\\\game-of-thrones\\\\react-gotapp\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\DenisIevlev\\\\Desktop\\\\game-of-thrones\\\\react-gotapp\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\DenisIevlev\\\\Desktop\\\\game-of-thrones\\\\react-gotapp\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\DenisIevlev\\\\Desktop\\\\game-of-thrones\\\\react-gotapp\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\DenisIevlev\\\\Desktop\\\\game-of-thrones\\\\react-gotapp\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\DenisIevlev\\\\Desktop\\\\game-of-thrones\\\\react-gotapp\\\\src\\\\components\\\\randomChar\\\\randomChar.js\";\nimport React, { Component } from 'react';\nimport './randomChar.css';\nimport gotService from '../../services/gotService';\nimport Spinner from '../spinner';\nimport ErrorMessage from '../errorMessage';\n\nvar RandomChar =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(RandomChar, _Component);\n\n  function RandomChar() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, RandomChar);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(RandomChar)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.gotService = new gotService();\n    _this.state = {\n      character: {},\n      loading: true,\n      error: false\n    };\n\n    _this.onCharLoaded = function (character) {\n      _this.setState({\n        character: character,\n        loading: false\n      });\n    };\n\n    _this.onError = function (err) {\n      _this.setState({\n        error: true,\n        loading: false\n      });\n    };\n\n    _this.updateChar = function () {\n      var id = Math.floor(Math.random() * 140 + 1);\n\n      _this.gotService.getCharacter(id).then(_this.onCharLoaded).catch(_this.onError);\n    };\n\n    return _this;\n  }\n\n  _createClass(RandomChar, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.updateChar(); // this.timerId = setInterval(this.updateChar, 1500);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      clearInterval(this.timerId);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          character = _this$state.character,\n          loading = _this$state.loading,\n          error = _this$state.error;\n      var errorMessage = error ? React.createElement(ErrorMessage, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }) : null;\n      var spinner = loading ? React.createElement(Spinner, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }) : null;\n      var content = !(loading || error) ? React.createElement(View, {\n        character: character,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }) : null;\n      return React.createElement(\"div\", {\n        className: \"random-block rounded\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, errorMessage, spinner, content);\n    }\n  }]);\n\n  return RandomChar;\n}(Component);\n\nexport { RandomChar as default };\n\nvar View = function View(_ref) {\n  var character = _ref.character;\n  var name = character.name,\n      gender = character.gender,\n      born = character.born,\n      died = character.died,\n      culture = character.culture;\n  return React.createElement(React.Fragment, null, React.createElement(\"h4\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, \"Random Character: \", name), React.createElement(\"ul\", {\n    className: \"list-group list-group-flush\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, React.createElement(\"li\", {\n    className: \"list-group-item d-flex justify-content-between\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"term\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, \"Gender \"), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, gender)), React.createElement(\"li\", {\n    className: \"list-group-item d-flex justify-content-between\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"term\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, \"Born \"), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, born)), React.createElement(\"li\", {\n    className: \"list-group-item d-flex justify-content-between\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"term\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, \"Died \"), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, died)), React.createElement(\"li\", {\n    className: \"list-group-item d-flex justify-content-between\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"term\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, \"Culture \"), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, culture))));\n};","map":{"version":3,"sources":["C:\\Users\\DenisIevlev\\Desktop\\game-of-thrones\\react-gotapp\\src\\components\\randomChar\\randomChar.js"],"names":["React","Component","gotService","Spinner","ErrorMessage","RandomChar","state","character","loading","error","onCharLoaded","setState","onError","err","updateChar","id","Math","floor","random","getCharacter","then","catch","clearInterval","timerId","errorMessage","spinner","content","View","name","gender","born","died","culture"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport './randomChar.css';\r\nimport gotService from '../../services/gotService';\r\nimport Spinner from '../spinner';\r\nimport ErrorMessage from '../errorMessage';\r\n\r\nexport default class RandomChar extends Component {\r\n\r\n    gotService = new gotService();\r\n\r\n    state = {\r\n        character: {},\r\n        loading: true,\r\n        error: false\r\n    }\r\n    componentDidMount(){\r\n        this.updateChar();\r\n        // this.timerId = setInterval(this.updateChar, 1500);\r\n    }\r\n\r\n    componentWillUnmount(){\r\n        clearInterval(this.timerId);\r\n    }\r\n\r\n    onCharLoaded = (character) => {\r\n        this.setState({\r\n            character,\r\n            loading: false\r\n        })\r\n    }\r\n    onError = (err) => {\r\n    this.setState({\r\n        error: true,\r\n        loading: false\r\n    })\r\n    }\r\n    updateChar = () => {\r\n        const id = Math.floor(Math.random() * 140 + 1);\r\n        this.gotService.getCharacter(id)\r\n            .then(this.onCharLoaded)\r\n            .catch(this.onError);\r\n    }\r\n    render() {\r\n        const { character, loading, error } = this.state;\r\n        \r\n        const errorMessage = error ? <ErrorMessage></ErrorMessage> : null;\r\n\r\n        const spinner = loading ? <Spinner></Spinner> : null;\r\n        const content = !(loading || error) ?  <View character={character}></View> : null;\r\n        \r\n\r\n        return (\r\n            <div className=\"random-block rounded\">\r\n            {errorMessage}\r\n            {spinner}\r\n            {content}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst View = ({ character }) => {\r\n    const {name, gender, born, died, culture} = character;\r\n    return (\r\n        <>\r\n            <h4>Random Character: {name}</h4>\r\n            <ul className=\"list-group list-group-flush\">\r\n                <li className=\"list-group-item d-flex justify-content-between\">\r\n                    <span className=\"term\">Gender </span>\r\n                    <span>{gender}</span>\r\n                </li>\r\n                <li className=\"list-group-item d-flex justify-content-between\">\r\n                    <span className=\"term\">Born </span>\r\n                    <span>{born}</span>\r\n                </li>\r\n                <li className=\"list-group-item d-flex justify-content-between\">\r\n                    <span className=\"term\">Died </span>\r\n                    <span>{died}</span>\r\n                </li>\r\n                <li className=\"list-group-item d-flex justify-content-between\">\r\n                    <span className=\"term\">Culture </span>\r\n                    <span>{culture}</span>\r\n                </li>\r\n            </ul>\r\n        </>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}