{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\DenisIevlev\\\\Desktop\\\\game-of-thrones\\\\react-gotapp\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\DenisIevlev\\\\Desktop\\\\game-of-thrones\\\\react-gotapp\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\DenisIevlev\\\\Desktop\\\\game-of-thrones\\\\react-gotapp\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\DenisIevlev\\\\Desktop\\\\game-of-thrones\\\\react-gotapp\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\DenisIevlev\\\\Desktop\\\\game-of-thrones\\\\react-gotapp\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\DenisIevlev\\\\Desktop\\\\game-of-thrones\\\\react-gotapp\\\\src\\\\components\\\\randomChar\\\\randomChar.js\";\nimport React, { Component } from 'react';\nimport './randomChar.css';\nimport gotService from '../../services/gotService';\nimport Spinner from '../spinner';\n\nvar RandomChar =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(RandomChar, _Component);\n\n  function RandomChar() {\n    var _this;\n\n    _classCallCheck(this, RandomChar);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(RandomChar).call(this));\n    _this.gotService = new gotService();\n    _this.state = {\n      character: {},\n      loading: true\n    };\n\n    _this.onCharLoaded = function (character) {\n      _this.setState({\n        character: character,\n        loading: false\n      });\n    };\n\n    _this.updateChar();\n\n    return _this;\n  }\n\n  _createClass(RandomChar, [{\n    key: \"updateChar\",\n    value: function updateChar() {\n      var id = Math.floor(Math.random() * 140 + 1);\n      this.gotService.getCharacter(id).then(this.onCharLoaded);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          character = _this$state.character,\n          loading = _this$state.loading;\n\n      if (loading) {\n        return React.createElement(Spinner, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 33\n          },\n          __self: this\n        });\n      }\n\n      return React.createElement(\"div\", {\n        className: \"random-block rounded\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, React.createElement(View, {\n        character: character,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return RandomChar;\n}(Component);\n\nexport { RandomChar as default };\n\nvar View = function View(_ref) {\n  var character = _ref.character;\n  var name = character.name,\n      gender = character.gender,\n      born = character.born,\n      dide = character.dide,\n      culture = character.culture;\n  return React.createElement(React.Fragment, null, React.createElement(\"h4\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, \"Random Character: \", name), React.createElement(\"ul\", {\n    className: \"list-group list-group-flush\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, React.createElement(\"li\", {\n    className: \"list-group-item d-flex justify-content-between\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"term\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, \"Gender \"), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, gender)), React.createElement(\"li\", {\n    className: \"list-group-item d-flex justify-content-between\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"term\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, \"Born \"), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, born)), React.createElement(\"li\", {\n    className: \"list-group-item d-flex justify-content-between\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"term\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, \"Died \"), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, died)), React.createElement(\"li\", {\n    className: \"list-group-item d-flex justify-content-between\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"term\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, \"Culture \"), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, culture))));\n};","map":{"version":3,"sources":["C:\\Users\\DenisIevlev\\Desktop\\game-of-thrones\\react-gotapp\\src\\components\\randomChar\\randomChar.js"],"names":["React","Component","gotService","Spinner","RandomChar","state","character","loading","onCharLoaded","setState","updateChar","id","Math","floor","random","getCharacter","then","View","name","gender","born","dide","culture","died"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport './randomChar.css';\r\nimport gotService from '../../services/gotService';\r\nimport Spinner from '../spinner';\r\n\r\nexport default class RandomChar extends Component {\r\n    constructor() {\r\n        super();\r\n        this.updateChar();\r\n    }\r\n\r\n    gotService = new gotService();\r\n    state = {\r\n        character: {},\r\n        loading: true\r\n    }\r\n\r\n    onCharLoaded = (character) => {\r\n        this.setState({\r\n            character,\r\n            loading: false\r\n        })\r\n    }\r\n    updateChar() {\r\n        const id = Math.floor(Math.random() * 140 + 1);\r\n        this.gotService.getCharacter(id)\r\n            .then(this.onCharLoaded);\r\n    }\r\n    render() {\r\n        const { character, loading } = this.state;\r\n\r\n        if (loading) {\r\n            return <Spinner></Spinner>\r\n        }\r\n\r\n        return (\r\n            <div className=\"random-block rounded\">\r\n             <View character={character}></View>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst View = ({ character }) => {\r\n    const {name, gender, born, dide, culture} = character;\r\n    return (\r\n        <>\r\n            <h4>Random Character: {name}</h4>\r\n            <ul className=\"list-group list-group-flush\">\r\n                <li className=\"list-group-item d-flex justify-content-between\">\r\n                    <span className=\"term\">Gender </span>\r\n                    <span>{gender}</span>\r\n                </li>\r\n                <li className=\"list-group-item d-flex justify-content-between\">\r\n                    <span className=\"term\">Born </span>\r\n                    <span>{born}</span>\r\n                </li>\r\n                <li className=\"list-group-item d-flex justify-content-between\">\r\n                    <span className=\"term\">Died </span>\r\n                    <span>{died}</span>\r\n                </li>\r\n                <li className=\"list-group-item d-flex justify-content-between\">\r\n                    <span className=\"term\">Culture </span>\r\n                    <span>{culture}</span>\r\n                </li>\r\n            </ul>\r\n        </>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}